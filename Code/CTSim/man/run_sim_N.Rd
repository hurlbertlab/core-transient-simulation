% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_sim_N.r
\name{run_sim_N}
\alias{run_sim_N}
\title{Run multiple simulations}
\usage{
run_sim_N(nruns, parms, nparallel = 1, simID = "test",
  save_sim = NULL, report = 0, return_results = T, restart = F,
  lib_loc = NULL)
}
\arguments{
\item{nruns}{(required) number of replicate simulations}

\item{parms}{(required) list of parameters for running simulation as 
created by \code{\link{make_parmlist}}}

\item{nparallel}{number of cores to run the simulations on in parallel. 
Defaults to 1.}

\item{simID}{character string identifying this simulation run. 
Defaults to 'test'.}

\item{save_sim}{directory in which to save simulation results. 
If none specified simulation results are not saved.}

\item{report}{number of timesteps after which to report status. 
Defaults to 0, no reporting.}

\item{return_results}{logical indicating whether function should
return simulation results and objects. See details. Defaults to TRUE.}

\item{restart}{logical indicating whether the simulation should continue 
from a set of saved runs. See details.}

\item{lib_loc}{location where \code{CTSim} is installed, if not on default
search path}
}
\value{
nothing or a list of simulation results and objects. See details.
}
\description{
Runs multiple independent simulations on the same set of parameters.
}
\details{
This function runs multiple independent simulations on a set of parameters 
given in \code{parms}. Each run generates a new landscape, species pool, 
global species abundance distribution and initial metacommunity.
Landscapes, species pools and gsads are saved as lists 
(object names: \code{lands_N}, \code{species_N}, \code{gsad_N})
in \code{<simID>_simobjects.RData}.
Simulations can be run in parallel by specifying 
\code{nparallel > 1}, which requires the \code{\link[doParallel]{doParallel}} and
\code{\link[foreach]{foreach}} packages.
By default, \code{nparallel = 1} and the simulations proceed serially.
Each run of the simulation is temporarily saved to the working directory
or permanently saved to the directory specified by \code{save_sim}. 
If this directory does not exist then it is created. Runs are saved as
\code{<simID>_run<i>.RData}. This file contains five objects:
\describe{
\item{results}{an array of the metacommunity through time returned by 
	\code{\link{run_sim}}. Note that if the parameter \code{calc_rates}
	is \code{TRUE}, then this will be a list whose first element is 
	the simulation results and whose second element is an array describing
	rates of species gains and losses through time for each cell.}
\item{this_land}{the landscape used for the simulation}
\item{this_species}{the species pool used in the simulation}
\item{this_gsad}{the global species abundance distribution used in
	the simulation}
\item{this_metacomm}{the initial metacommunity}
}
If \code{return_results} is \code{TRUE}, then 
after all simulations are complete, all runs are read back into memory,  
compiled arrays, and returned as a list by the function. 
List components are \code{results}, \code{species}, \code{lands},
\code{gsads} and the first dimension of each array is the run to which it
corresponds. For example, \code{results[1,,,]} is the metacommunity 
from run 1. If \code{return_results} is \code{FALSE} then temporary
files from the simulation runs are NOT removed, even if \code{save_sim} is
not specified.

This function can be used to restart a set of multiple simulation runs, 
but does not currently allow users to restart a simulation on an existing 
run. If \code{restart} is \code{TRUE}, the function navigates to the 
\code{save_sim} directory and searches for the first instance of 
code{i <= nruns} where \code{<simID>_run<i>.RData} does not exist.
It then starts simulations for all \code{i} that do not have saved files
using the objects saved in \code{[simID]_simobjects.RData}.
}
\note{
Users should be cautious in specifying \code{return_results=TRUE}
for large simulations where memory requirements may not support large 
arrays.
}
\seealso{
\code{\link{run_sim}} for details on how each simulation runs \cr
\code{\link{make_parmlist}} for parameters that can be passed to the 
simulation
}
